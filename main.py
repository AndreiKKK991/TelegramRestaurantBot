import config
import telebot
from telebot import types
from sqlalchemy import create_engine, Column, Integer, String, DateTime
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from datetime import datetime

Base = declarative_base()

class Booking(Base):
    __tablename__ = 'bookings'
    id = Column(Integer, primary_key=True)
    user_id = Column(Integer, nullable=False)
    name = Column(String, nullable=False)
    phone = Column(String, nullable=False)
    date_time = Column(DateTime, nullable=False)
    guests = Column(Integer, nullable=False)

engine = create_engine('sqlite:///restaurant.db')
Base.metadata.create_all(engine)
Session = sessionmaker(bind=engine)

bot = telebot.TeleBot(config.token)

user_data = {}

MENU = {
    "ü•ó –ó–∞–∫—É—Å–∫–∏":{
        "üçÖ–ë—Ä—É—Å–∫–µ—Ç—Ç–∞ —Å —Ç–æ–º–∞—Ç–∞–º–∏ –∏ –±–∞–∑–∏–ª–∏–∫–æ–º": ("Bruscetta.jpg", "–ë—Ä—É—Å–∫–µ—Ç—Ç–∞ —Å —Ç–æ–º–∞—Ç–∞–º–∏ –∏ –±–∞–∑–∏–ª–∏–∫–æ–º - 2000—Ç–≥/—à—Ç"),
        "üêü–¢–∞—Ä—Ç–∞—Ä –∏–∑ –ª–æ—Å–æ—Å—è —Å –∞–≤–æ–∫–∞–¥–æ": ("Tartar.jpg", "–¢–∞—Ä—Ç–∞—Ä –∏–∑ –ª–æ—Å–æ—Å—è —Å –∞–≤–æ–∫–∞–¥–æ - 3600—Ç–≥/—à—Ç"),
        "üßÄ–°—ã—Ä–Ω–∞—è —Ç–∞—Ä–µ–ª–∫–∞ (–∞—Å—Å–æ—Ä—Ç–∏)": ("Chesse.jpg", "–°—ã—Ä–Ω–∞—è —Ç–∞—Ä–µ–ª–∫–∞ (–∞—Å—Å–æ—Ä—Ç–∏) - 4250—Ç–≥/—à—Ç"),
    },
    "üçù –ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞":{
        "üçù–ü–∞—Å—Ç–∞ –∫–∞—Ä–±–æ–Ω–∞—Ä–∞": ("Pasta.jpg", "–ü–∞—Å—Ç–∞ –∫–∞—Ä–±–æ–Ω–∞—Ä–∞ - 3450—Ç–≥/—à—Ç"),
        "üçÑ–†–∏–∑–æ—Ç—Ç–æ —Å –≥—Ä–∏–±–∞–º–∏ –∏ —Ç—Ä—é—Ñ–µ–ª—å–Ω—ã–º –º–∞—Å–ª–æ–º": ("Rizotto.jpg", "–†–∏–∑–æ—Ç—Ç–æ —Å –≥—Ä–∏–±–∞–º–∏ –∏ —Ç—Ä—é—Ñ–µ–ª—å–Ω—ã–º –º–∞—Å–ª–æ–º - 3850—Ç–≥/—à—Ç"),
        "ü•©–°—Ç–µ–π–∫ —Ä–∏–±–∞–π —Å —Å–æ—É—Å–æ–º –¥–µ–º–∏–≥–ª–∞—Å": ("Steak.jpg", "–°—Ç–µ–π–∫ —Ä–∏–±–∞–π —Å —Å–æ—É—Å–æ–º –¥–µ–º–∏–≥–ª–∞—Å - 7250—Ç–≥/—à—Ç"),
    },
    "üç∞ –î–µ—Å–µ—Ä—Ç—ã":{
        "üç∞–¢–∏—Ä–∞–º–∏—Å—É": ("Teramisu.jpg", "–¢–∏—Ä–∞–º–∏—Å—É - 2100—Ç–≥/—à—Ç"),
        "ü•ß–ß–∏–∑–∫–µ–π–∫ –ù—å—é-–ô–æ—Ä–∫": ("Kek.jpg", "–ß–∏–∑–∫–µ–π–∫ –ù—å—é-–ô–æ—Ä–∫ - 2400—Ç–≥/—à—Ç"),
        "üç®–ú–æ—Ä–æ–∂–µ–Ω–æ–µ (3 —à–∞—Ä–∏–∫–∞ –Ω–∞ –≤—ã–±–æ—Ä)": ("Ice.jpg", "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ (3 —à–∞—Ä–∏–∫–∞ –Ω–∞ –≤—ã–±–æ—Ä) - 1750—Ç–≥/—à—Ç"),
    },
    "ü•§ –ù–∞–ø–∏—Ç–∫–∏":{
        "‚òï–ö–∞–ø—É—á–∏–Ω–æ": ("Capuchino.jpg", "–ö–∞–ø—É—á–∏–Ω–æ - 1100—Ç–≥/—à—Ç"),
        "üçã–õ–∏–º–æ–Ω–∞–¥ –¥–æ–º–∞—à–Ω–∏–π": ("Limon.jpg", "–õ–∏–º–æ–Ω–∞–¥ –¥–æ–º–∞—à–Ω–∏–π - 1400—Ç–≥/–ª"),
        "üç∑–ë–æ–∫–∞–ª –≤–∏–Ω–∞ (–∫—Ä–∞—Å–Ω–æ–µ/–±–µ–ª–æ–µ)": ("Vino.jpg", "–ë–æ–∫–∞–ª –≤–∏–Ω–∞ (–∫—Ä–∞—Å–Ω–æ–µ/–±–µ–ª–æ–µ) - 2250—Ç–≥/—à—Ç"),
    }
}

IMAGE_FOLDER = "C:/Users/WebUser/Desktop/Visual ST/TgRest/Photos/"

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∏–∫–æ–≤ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ. –í–≤–µ–¥–∏—Ç–µ /book, —á—Ç–æ–±—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫.")


@bot.message_handler(commands=["help"])
def message_help(message):
    bot.send_message(message.chat.id, "/start - –ù–∞—á–∞—Ç—å\n" "/help - –í—Å–µ –∫–æ–º–∞–Ω–¥—ã\n" "/schedule - –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã\n" "/book - –ù–∞—á–∞–ª–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n" "/mybooking - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –±—Ä–æ–Ω–∏\n" "/cancel - –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å\n" "/menu - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç\n" "/admin - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –±—Ä–æ–Ω–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)")


@bot.message_handler(commands=['schedule'])
def send_schedule(message):
    bot.send_message(message.chat.id, "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º:\n–ü–ù - 8:00 –¥–æ 23:00\n"
                                                    "–í–¢ - 8:00 –¥–æ 23:00\n"
                                                    "–°–† - 8:00 –¥–æ 23:00\n"
                                                    "–ß–¢ - 8:00 –¥–æ 23:00\n"
                                                    "–ü–¢ - 8:00 –¥–æ 23:00\n"
                                                    "–°–ë - –í—ã—Ö–æ–¥–Ω—ã–µ\n"
                                                    "–í–° - –í—ã—Ö–æ–¥–Ω—ã–µ")


@bot.message_handler(commands=['book'])
def book(message):
    user_data[message.chat.id] = {}
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    bot.register_next_step_handler(message, get_name)

def get_name(message):
    user_data[message.chat.id]['name'] = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    bot.register_next_step_handler(message, get_phone)

def get_phone(message):
    user_data[message.chat.id]['phone'] = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú):")
    bot.register_next_step_handler(message, get_datetime)

def get_datetime(message):
    try:
        user_data[message.chat.id]['date_time'] = datetime.strptime(message.text, "%Y-%m-%d %H:%M")
        bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ –≥–æ—Å—Ç–µ–π?")
        bot.register_next_step_handler(message, get_guests)
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞ (–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:MM).")
        bot.register_next_step_handler(message, get_datetime)

def get_guests(message):
    try:
        user_data[message.chat.id]['guests'] = int(message.text)
        data = user_data[message.chat.id]
        text = (f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –±—Ä–æ–Ω—å:\n"
            f"–ò–º—è: {data['name']}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
            f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {data['date_time']}\n"
            f"–ì–æ—Å—Ç–µ–π: {data['guests']}\n\n"
            f"–í–≤–µ–¥–∏—Ç–µ '–î–∞' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ '–ù–µ—Ç' –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
        markup.add("–î–∞","–ù–µ—Ç")
        bot.send_message(message.chat.id, text + "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?", reply_markup=markup)
        bot.register_next_step_handler(message, confirm_booking)
    except ValueError:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≥–æ—Å—Ç–µ–π")
        bot.register_next_step_handler(message, get_guests)


def confirm_booking(message):
    if message.text.lower() == "–¥–∞":
        session = Session()
        data = user_data[message.chat.id]
        booking = Booking(
            user_id=message.chat.id,
            name=data['name'],
            phone=data['phone'],
            date_time=data['date_time'],
            guests=data['guests']
        )
        session.add(booking)
        session.commit()
        session.close()
        bot.send_message(message.chat.id, "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ", reply_markup=types.ReplyKeyboardRemove())
    else:
        bot.send_message(message.chat.id, "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=types.ReplyKeyboardRemove())


@bot.message_handler(commands=['mybooking'])
def my_booking(message):
    session = Session()
    booking = session.query(Booking).filter_by(user_id=message.chat.id).first()
    if booking:
        bot.send_message(message.chat.id, 
            f"–í–∞—à–∞ –±—Ä–æ–Ω—å:\n–ò–º—è: {booking.name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {booking.phone}\n"
            f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {booking.date_time}\n–ì–æ—Å—Ç–µ–π: {booking.guests}")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–æ–ª–∏–∫–æ–≤")
    session.close()


@bot.message_handler(commands=['cancel'])
def cancel_booking(message):
    session = Session()
    booking = session.query(Booking).filter_by(user_id=message.chat.id).first()
    if booking:
        session.delete(booking)
        session.commit()
        bot.send_message(message.chat.id, "–í–∞—à–∞ –±—Ä–æ–Ω—å –æ—Ç–º–µ–Ω–µ–Ω–∞")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–æ–ª–∏–∫–æ–≤")
    session.close()


@bot.message_handler(commands=['admin'])
def admin_panel(message):
    session = Session()
    bookings = session.query(Booking).all()
    if bookings:
        text = "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—Ä–æ–Ω–µ–π:\n\n"
        for b in bookings:
            text += f"ID: {b.id}, –ò–º—è: {b.name}, –¢–µ–ª: {b.phone}, –î–∞—Ç–∞: {b.date_time}, –ì–æ—Å—Ç–µ–π: {b.guests}\n"
        bot.send_message(message.chat.id, text)
    else:
        bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–µ–π")
    session.close()


@bot.message_handler(commands=["menu"])
def send_menu(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    
    for category in MENU.keys():
        keyboard.add(types.KeyboardButton(category))

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=keyboard)


@bot.message_handler(content_types=['text'])
def process_message(message):
    text = message.text.strip()
    
    if text in MENU:
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        
        for item in MENU[text].keys():
            keyboard.add(types.KeyboardButton(item))

        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {text}:", reply_markup=keyboard)

    else:
        for category in MENU.values():
            if text in category:
                image_name, description = category[text]
                image_path = IMAGE_FOLDER + image_name

                with open(image_path, "rb") as file:
                    bot.send_photo(message.chat.id, file)

                bot.send_message(message.chat.id, description)
                return
            
    if message.text.lower() == "–ø–æ–ª–Ω–æ–µ –º–µ–Ω—é":
        file = open("C:/Users/WebUser/Desktop/Visual ST/TgRest/Menu/FullMenu.txt", "rb")
        bot.send_document(message.chat.id, file)
        bot.send_message(message.chat.id, "–í–æ—Ç –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é")


if __name__ == "__main__":
    bot.infinity_polling()